{
	"info": {
		"_postman_id": "32caccf8-9ba1-4ed1-8d97-cb1e2d695064",
		"name": "Admin Auto Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27806185"
	},
	"item": [
		{
			"name": "Attempt login into admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Login test\", function()",
							"{",
							"    const responseJson = pm.response.json();",
							"",
							"    pm.expect(responseJson.status).to.eql('success');",
							"    pm.expect(responseJson.message).to.eql(\"Login success\");",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "127.0.0.1:5000/login",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get participants list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"get users test\", function()",
							"{",
							"    const responseJson = pm.response.json();",
							"",
							"    pm.expect(responseJson.status).to.eql('success');",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "127.0.0.1:5000/participants",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"participants"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get organizers list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"get users test\", function()",
							"{",
							"    const responseJson = pm.response.json();",
							"",
							"    pm.expect(responseJson.status).to.eql('success');",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "127.0.0.1:5000/organizers",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"organizers"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get participant by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"get users test\", function()",
							"{",
							"    const responseJson = pm.response.json();",
							"",
							"    pm.expect(responseJson.status).to.eql('success');",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "127.0.0.1:5000/participants/404",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"participants",
						"404"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get organizer by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"get users test\", function()",
							"{",
							"    const responseJson = pm.response.json();",
							"",
							"    pm.expect(responseJson.status).to.eql('success');",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "127.0.0.1:5000/organizers/6",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"organizers",
						"6"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get participant by ID (Fail)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"get users test\", function()",
							"{",
							"    const responseJson = pm.response.json();",
							"",
							"    pm.expect(responseJson.status).to.eql('success');",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "127.0.0.1:5000/participants/1",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"participants",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get organizer by ID (Fail)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"get users test\", function()",
							"{",
							"    const responseJson = pm.response.json();",
							"",
							"    pm.expect(responseJson.status).to.eql('success');",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "127.0.0.1:5000/organizers/1",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"organizers",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get future hackathons",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"get future hackathons test\", function()",
							"{",
							"    const responseJson = pm.response.json();",
							"",
							"    pm.expect(responseJson.status).to.eql('success');",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "127.0.0.1:5000/hackathons/future",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"hackathons",
						"future"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get past hackathons",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"get past hackathons test\", function()",
							"{",
							"    const responseJson = pm.response.json();",
							"",
							"    pm.expect(responseJson.status).to.eql('success');",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "127.0.0.1:5000/hackathons/past",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"hackathons",
						"past"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all hackathons",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"get all hackathons test\", function()",
							"{",
							"    const responseJson = pm.response.json();",
							"",
							"    pm.expect(responseJson.status).to.eql('success');",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "127.0.0.1:5000/hackathons",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"hackathons"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get hackathon teams",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"get unexisting hackathons teams test\", function()",
							"{",
							"    const responseJson = pm.response.json();",
							"",
							"    pm.expect(responseJson.status).to.eql('success');",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "127.0.0.1:5000/hackathons/2/teams",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"hackathons",
						"2",
						"teams"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get hackathon by id (Success)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"get hackathon positive test\", function()",
							"{",
							"    const responseJson = pm.response.json();",
							"",
							"    pm.expect(responseJson.status).to.eql('success');",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "127.0.0.1:5000/hackathons/2",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"hackathons",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get hackathon by id (Fail)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"get hackathon negative test\", function()",
							"{",
							"    const responseJson = pm.response.json();",
							"",
							"    pm.expect(responseJson.status).to.eql('fail');",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "127.0.0.1:5000/hackathons/345345",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"hackathons",
						"345345"
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Logout test\", function()",
							"{",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "pm.test(\"Logout test\", function()\n{\n    const responseJson = pm.response.json();\n\n    pm.expect(responseJson.status).to.eql('success');\n    pm.response.to.have.status(200);\n});"
				},
				"url": {
					"raw": "127.0.0.1:5000/logout",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"logout"
					],
					"query": [
						{
							"key": "login",
							"value": "admin",
							"disabled": true
						},
						{
							"key": "password",
							"value": "admin",
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "admin",
				"type": "string"
			},
			{
				"key": "username",
				"value": "admin",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}